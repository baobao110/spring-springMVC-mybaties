<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1"
  metadata-complete="true">
	
	<!--这里是对spring对应的xml文件进行初始化,这里只需要修改value值中的classpath对应的值就是xml文件在resources下面的相对路径  -->
	<context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring/config.xml</param-value>
    </context-param>
    
	<!-- <listener>
		<listener-class>com.Listen.servletListen</listener-class>
	</listener> -->
	
	<!--spring容器初始化  ,这样就不用配置Servlet类型的监听器,这里写法固定-->
	 <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
	
	<listener>
		<listener-class>com.Listen.sessionListen</listener-class>
	</listener>
	
	<listener>
		<listener-class>com.Listen.requestListen</listener-class>
	</listener>
	
    <!-- <servlet>
      <servlet-name>test</servlet-name>
      <servlet-class>com.Test.util</servlet-class>
       <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet-mapping>
      <servlet-name>test</servlet-name>
      <url-pattern>*.do</url-pattern>
    </servlet-mapping> -->
    
    <!--这边的配置作用是以后我们不再需要Servlet层 ,这里只需要改变param对应的value值,其实就是将路径变更为mvc的xml相对路径 -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/mvc-config.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>
     <!-- 还有就是url-pattern对应的值就是原来的Servlet的过滤条件 -->
    
    <filter>
    	<filter-name>z1</filter-name>
    	<filter-class>com.filter.FilterX</filter-class>
    </filter>
    	
    <filter-mapping>
    	<filter-name>z1</filter-name>
    	<url-pattern>*.do</url-pattern>
    </filter-mapping>
    
    <filter-mapping>
    	<filter-name>xx</filter-name>
    	<url-pattern>*.do</url-pattern>
    </filter-mapping>
    
    <filter>
    	<filter-name>xx</filter-name>
    	<filter-class>com.filter.check</filter-class>
    </filter>
    
    <welcome-file-list>
    	<welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.xhtml</welcome-file>
        <welcome-file>index.htm</welcome-file>
    </welcome-file-list>

</web-app>

<!-- 这里需要注意的是优先级: Listen>Filter>Servlet -->
